// Generated by CoffeeScript 1.10.0
(function() {
  var CoffeeScriptCompiler, Compiler, coffee, fs,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  fs = require('fs');

  coffee = require('coffee-script');

  Compiler = require('metaserve/lib/compiler');

  CoffeeScriptCompiler = (function(superClass) {
    extend(CoffeeScriptCompiler, superClass);

    function CoffeeScriptCompiler() {
      return CoffeeScriptCompiler.__super__.constructor.apply(this, arguments);
    }

    CoffeeScriptCompiler.prototype.default_options = {
      ext: 'coffee',
      coffee_options: {
        bare: true
      }
    };

    CoffeeScriptCompiler.prototype.compile = function(coffee_filename, cb) {
      var file_str, options;
      options = this.options;
      file_str = fs.readFileSync(coffee_filename).toString();
      return cb(null, {
        content_type: 'text/javascript',
        source: file_str,
        compiled: coffee.compile(file_str, options.coffee_options)
      });
    };

    return CoffeeScriptCompiler;

  })(Compiler);

  module.exports = function(options) {
    if (options == null) {
      options = {};
    }
    return new CoffeeScriptCompiler(options);
  };

}).call(this);
