// Generated by CoffeeScript 1.8.0
(function() {
  var CoffeeScriptCompiler, Compiler, coffee, fs,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  fs = require('fs');

  coffee = require('coffee-script');

  Compiler = require('metaserve/src/compiler');

  CoffeeScriptCompiler = (function(_super) {
    __extends(CoffeeScriptCompiler, _super);

    function CoffeeScriptCompiler() {
      return CoffeeScriptCompiler.__super__.constructor.apply(this, arguments);
    }

    CoffeeScriptCompiler.prototype.default_options = {
      ext: 'coffee',
      coffee_options: {
        bare: true
      }
    };

    CoffeeScriptCompiler.prototype.compile = function(coffee_filename) {
      var options;
      options = this.options;
      return function(req, res, next) {
        var file_str;
        console.log('[Coffee compiler] Trying to compile ' + coffee_filename);
        file_str = fs.readFileSync(coffee_filename).toString();
        res.setHeader('Content-Type', 'text/javascript');
        return res.end(coffee.compile(file_str, options.coffee_options));
      };
    };

    return CoffeeScriptCompiler;

  })(Compiler);

  module.exports = function(options) {
    if (options == null) {
      options = {};
    }
    return new CoffeeScriptCompiler(options);
  };

}).call(this);
